{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "ReactHotkeys",
    "props",
    "onKeyDown",
    "bind",
    "onKeyUp",
    "handleKeyUpEvent",
    "handle",
    "filter",
    "splitKey",
    "Hotkeys",
    "unbind",
    "keyName",
    "document",
    "body",
    "addEventListener",
    "isKeyDown",
    "removeEventListener",
    "e",
    "disabled",
    "shortcut",
    "allowRepeat",
    "indexOf",
    "children",
    "React",
    "Component",
    "event",
    "target",
    "srcElement",
    "tagName",
    "isContentEditable",
    "PropTypes",
    "string",
    "func",
    "bool"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAeqBA,Y;;;;;AAkBnB,wBAAYC,KAAZ,EAAuC;AAAA;;AAAA;AACrC,8BAAMA,KAAN;AADqC,4FAFX,KAEW;AAAA;AAErC,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,6CAAjB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,6CAAf;AACA,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,6CAAxB;AACA,UAAKG,MAAL,GAAc,EAAd;AALqC;AAMtC;;;;WACD,6BAAoB;AAClB,wBAA6B,KAAKL,KAAlC;AAAA,UAAQM,MAAR,eAAQA,MAAR;AAAA,UAAgBC,QAAhB,eAAgBA,QAAhB;;AACA,UAAID,MAAJ,EAAY;AACVE,2BAAQF,MAAR,GAAiBA,MAAjB;AACD;;AACDE,yBAAQC,MAAR,CAAe,KAAKT,KAAL,CAAWU,OAA1B;;AACA,8BAAQ,KAAKV,KAAL,CAAWU,OAAnB,EAAsC;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAtC,EAAoD,KAAKN,SAAzD;AACAU,MAAAA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwC,KAAKT,gBAA7C,CAAZ;AACD;;;WACD,gCAAuB;AACrBI,yBAAQC,MAAR,CAAe,KAAKT,KAAL,CAAWU,OAA1B;;AACA,WAAKI,SAAL,GAAiB,IAAjB;AACA,WAAKT,MAAL,GAAc,EAAd;AACAM,MAAAA,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,OAAlC,EAA2C,KAAKX,gBAAhD,CAAZ;AACD;;;WACD,iBAAQY,CAAR,EAA0BX,MAA1B,EAAgD;AAC9C,yBAA8B,KAAKL,KAAnC;AAAA,UAAQG,OAAR,gBAAQA,OAAR;AAAA,UAAiBc,QAAjB,gBAAiBA,QAAjB;AACA,OAACA,QAAD,IAAad,OAAb,IAAwBA,OAAO,CAACE,MAAM,CAACa,QAAR,EAAkBF,CAAlB,EAAqBX,MAArB,CAA/B;AACD;;;WACD,mBAAUW,CAAV,EAA4BX,MAA5B,EAAkD;AAChD,yBAA6C,KAAKL,KAAlD;AAAA,UAAQC,SAAR,gBAAQA,SAAR;AAAA,UAAmBkB,WAAnB,gBAAmBA,WAAnB;AAAA,UAAgCF,QAAhC,gBAAgCA,QAAhC;AACA,UAAI,KAAKH,SAAL,IAAkB,CAACK,WAAvB,EAAoC;AACpC,WAAKL,SAAL,GAAiB,IAAjB;AACA,WAAKT,MAAL,GAAcA,MAAd;AACA,OAACY,QAAD,IAAahB,SAAb,IAA0BA,SAAS,CAACI,MAAM,CAACa,QAAR,EAAkBF,CAAlB,EAAqBX,MAArB,CAAnC;AACD;;;WACD,0BAAiBW,CAAjB,EAAmC;AACjC,UAAI,CAAC,KAAKF,SAAV,EAAqB;AACrB,WAAKA,SAAL,GAAiB,KAAjB;AACA,UAAI,KAAKd,KAAL,CAAWU,OAAX,IAAsB,KAAKV,KAAL,CAAWU,OAAX,CAAmBU,OAAnB,CAA2B,KAAKf,MAAL,CAAYa,QAAvC,IAAmD,CAA7E,EAAgF;AAChF,WAAKf,OAAL,CAAaa,CAAb,EAAgB,KAAKX,MAArB;AACA,WAAKA,MAAL,GAAc,EAAd;AACD;;;WACD,kBAAS;AACP,aAAO,KAAKL,KAAL,CAAWqB,QAAX,IAAuB,IAA9B;AACD;;;EA5DuCC,eAAMC,S;;;8BAA3BxB,Y,kBAC8B;AAC/CO,EAAAA,MAD+C,kBACxCkB,KADwC,EAClB;AAC3B,QAAMC,MAAM,GAAID,KAAK,CAACC,MAAP,IAAiCD,KAAK,CAACE,UAAtD;AACA,QAAIC,OAAO,GAAGF,MAAM,CAACE,OAArB;AACA,WAAO,EAAEF,MAAM,CAACG,iBAAP,IAA4BD,OAAO,KAAK,OAAxC,IAAmDA,OAAO,KAAK,QAA/D,IAA2EA,OAAO,KAAK,UAAzF,CAAP;AACD;AAL8C,C;8BAD9B5B,Y,eAQA;AACjBW,EAAAA,OAAO,EAAEmB,SAAS,CAACC,MADF;AAEjBxB,EAAAA,MAAM,EAAEuB,SAAS,CAACE,IAFD;AAGjB9B,EAAAA,SAAS,EAAE4B,SAAS,CAACE,IAHJ;AAIjB5B,EAAAA,OAAO,EAAE0B,SAAS,CAACE,IAJF;AAKjBd,EAAAA,QAAQ,EAAEY,SAAS,CAACG,IALH;AAMjBzB,EAAAA,QAAQ,EAAEsB,SAAS,CAACC;AANH,C",
  "sourcesContent": [
    "import React, { Fragment } from 'react';\nimport * as PropTypes from 'prop-types';\nimport Hotkeys, { HotkeysEvent } from 'hotkeys-js';\n\nexport type OnKeyFun = (shortcut: string, evn: KeyboardEvent, handle: HotkeysEvent) => void;\n\nexport interface IReactHotkeysProps {\n  keyName?: string;\n  filter?: (event: KeyboardEvent) => boolean;\n  onKeyUp?: OnKeyFun;\n  onKeyDown?: OnKeyFun;\n  allowRepeat?: boolean;\n  disabled?: boolean;\n  splitKey?: string;\n  children?: React.ReactNode;\n}\n\nexport default class ReactHotkeys extends React.Component<IReactHotkeysProps> {\n  public static defaultProps: IReactHotkeysProps = {\n    filter(event: KeyboardEvent) {\n      const target = (event.target as HTMLElement) || event.srcElement;\n      var tagName = target.tagName;\n      return !(target.isContentEditable || tagName === 'INPUT' || tagName === 'SELECT' || tagName === 'TEXTAREA');\n    },\n  }\n  static propTypes = {\n    keyName: PropTypes.string,\n    filter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    disabled: PropTypes.bool,\n    splitKey: PropTypes.string\n  }\n  public isKeyDown: boolean = false;\n  public handle: HotkeysEvent;\n  constructor(props: IReactHotkeysProps) {\n    super(props);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.handleKeyUpEvent = this.handleKeyUpEvent.bind(this);\n    this.handle = {} as HotkeysEvent;\n  }\n  componentDidMount() {\n    const { filter, splitKey } = this.props;\n    if (filter) {\n      Hotkeys.filter = filter;\n    }\n    Hotkeys.unbind(this.props.keyName as string);\n    Hotkeys(this.props.keyName as string, { splitKey }, this.onKeyDown);\n    document && document.body.addEventListener('keyup', this.handleKeyUpEvent);\n  }\n  componentWillUnmount() {\n    Hotkeys.unbind(this.props.keyName as string);\n    this.isKeyDown = true;\n    this.handle = {} as HotkeysEvent;\n    document && document.body.removeEventListener('keyup', this.handleKeyUpEvent);\n  }\n  onKeyUp(e: KeyboardEvent, handle: HotkeysEvent) {\n    const { onKeyUp, disabled } = this.props;\n    !disabled && onKeyUp && onKeyUp(handle.shortcut, e, handle)\n  }\n  onKeyDown(e: KeyboardEvent, handle: HotkeysEvent) {\n    const { onKeyDown, allowRepeat, disabled } = this.props;\n    if (this.isKeyDown && !allowRepeat) return;\n    this.isKeyDown = true;\n    this.handle = handle;\n    !disabled && onKeyDown && onKeyDown(handle.shortcut, e, handle)\n  }\n  handleKeyUpEvent(e: KeyboardEvent) {\n    if (!this.isKeyDown) return;\n    this.isKeyDown = false;\n    if (this.props.keyName && this.props.keyName.indexOf(this.handle.shortcut) < 0) return;\n    this.onKeyUp(e, this.handle);\n    this.handle = {} as HotkeysEvent;\n  }\n  render() {\n    return this.props.children || null;\n  }\n}\n"
  ]
}